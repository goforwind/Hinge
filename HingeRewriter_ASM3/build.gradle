apply plugin: 'java'
//apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'

sourceCompatibility = 1.5
version = '1.0'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    //compile group: '', name: 'asm-all', version: '3.3.1'
//    compile files("../lib/asm-3.3.1/asm-3.3.1.jar")
//    compile files("../lib/asm-3.3.1/asm-analysis-3.3.1.jar")
//    compile files("../lib/asm-3.3.1/asm-commons-3.3.1.jar")
//    compile files("../lib/asm-3.3.1/asm-tree-3.3.1.jar")
//    compile files("../lib/asm-3.3.1/asm-util-3.3.1.jar")
//    compile files("../lib/asm-3.3.1/asm-xml-3.3.1.jar")

    compile group: 'com.google.guava', name: 'guava', version: '15.0'
    compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    //testCompile group: 'junit', name: 'junit', version: '4.11'
}

// 将所有的依赖都打包
task fatJar(type: Jar) {
    manifest {
        attributes 'Premain-Class': 'com.newrelic.agent.compile.RewriterAgent'
        attributes 'Agent-Class': 'com.newrelic.agent.compile.RewriterAgent'
        attributes 'Can-Retransform-Classes': 'true'
        attributes 'Can-Redefine-Classes': 'true'
    }
    baseName = project.name
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}

jar {
    manifest {
        attributes 'Premain-Class': 'com.newrelic.agent.compile.RewriterAgent'
        attributes 'Agent-Class': 'com.newrelic.agent.compile.RewriterAgent'
        attributes 'Can-Retransform-Classes': 'true'
        attributes 'Can-Redefine-Classes': 'true'
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri('../repo'))
        }
    }
}